{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactForm/InputForm.module.css","components/Filter/Filter.module.css","components/PhonebookItem/BookItem.module.css","components/PhonebookList/PhonebookList.module.css","views/ContactsView/ContactsView.module.css","../node_modules/uuid/dist/esm-browser/rng.js","redux/contacts-operations.js","redux/contacts-selector.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/ContactForm/InputForm.js","components/Filter/Filter.js","components/PhonebookItem/PhoneBookItem.js","components/PhonebookList/PhonebookList.js","views/ContactsView/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getRandomValues","dispatch","a","actions","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","contacts","name","number","addContactRequest","post","addContactSuccess","addContactError","id","deleteItemRequest","delete","then","deleteItemSuccess","catch","error","deleteItemError","getContacts","state","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","v4","options","buf","rnds","random","connect","onFormSubmit","contactOperations","useState","setName","setNumber","contactId","useRef","uuidv4","inputValue","e","target","formReset","className","s","inputContainer","form","onSubmit","preventDefault","some","alert","formItem","type","pattern","title","required","onChange","button","onChangeFilter","filterAction","changeFilter","currentTarget","inputFilter","PhoneListItem","onDeleteList","list","buttonList","onClick","PhonebookList","useSelector","useDispatch","useEffect","contactsOperations","map","PhoneBookItem","ContactsView","Container","Contacts"],"mappings":"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","file":"static/js/contacts-view.f0c431ec.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"InputForm_inputContainer__1qEYV\",\"form\":\"InputForm_form__e4tV5\",\"formItem\":\"InputForm_formItem__TwCDJ\",\"button\":\"InputForm_button__39xjT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__XZAom\",\"inputFilter\":\"Filter_inputFilter__3mHT9\",\"title\":\"Filter_title__2-z5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"BookItem_list__3Vd6U\",\"name\":\"BookItem_name__3ylDC\",\"number\":\"BookItem_number__25-Ln\",\"buttonList\":\"BookItem_buttonList__2BuEv\",\"button\":\"BookItem_button__2ZwPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PhonebookList_title__1sATd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts\":\"ContactsView_Contacts__1GrJJ\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import axios  from \"axios\";\r\nimport actions from './actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:7777';\r\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(actions.fetchContactRequest());\r\n\r\n    try {\r\n        const { data } = await  axios.get('/contacts');\r\n        dispatch(actions.fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(actions.fetchContactError(error)); \r\n    }\r\n}\r\n\r\nconst addContact = data => async dispatch => {\r\n    const contacts = { name:data.name, number: data.number };\r\n    dispatch(actions.addContactRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contacts);\r\n        dispatch(actions.addContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(actions.addContactError(error));\r\n    }\r\n}\r\n\r\nconst deleteItem = id => dispatch => {\r\n    dispatch(actions.deleteItemRequest());\r\n\r\n    axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteItemSuccess(id)))\r\n    .catch(error => dispatch(actions.deleteItemError(error)));\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    fetchContacts,\r\n    addContact,\r\n    deleteItem,\r\n}\r\n\r\n\r\n"," import { createSelector } from \"@reduxjs/toolkit\";\r\n \r\n export const getContacts = state => state.contacts.items;\r\n export const getFilter = state => state.contacts.filter;\r\n export const getLoading = state => state.contacts.loading;\r\n\r\n  export const getVisibleContacts = createSelector(\r\n    [ getContacts, getFilter ], \r\n    (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  });\r\n\r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactOperations from \"../../redux/contacts-operations\";\nimport { getContacts } from \"../../redux/contacts-selector\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./InputForm.module.css\";\n\n function Input({ onFormSubmit, contacts }) {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactId = useRef(uuidv4());\n\n   const inputValue = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n            default:\n              return;\n    }\n  };\n\n   const addContact = (e) => {\n    e.preventDefault();\n    const newContact = contacts.some((contact) => contact.name === name)\n    if (newContact) {\n        alert(`${name} is already in contacts`);\n        formReset();\n        return;\n      }\n      onFormSubmit({ name: name, number: number, contactId: contactId});\n      formReset();\n  };\n\n   const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <div className={s.inputContainer}>\n        <form className={s.form} onSubmit={addContact}>\n          <label className={s.formItem}>\n            Name{\" \"}\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={inputValue}\n            />\n          </label>\n          <label className={s.formItem}>\n            Number{\" \"}\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={inputValue}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getContacts(state),\n })\n\nconst mapDispatchToProps = dispatch => ({\n  onFormSubmit: data => dispatch(contactOperations.addContact(data)), \n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Input);\n\nInput.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport filterAction from \"../../redux/actions\";\nimport { getFilter } from \"../../redux/contacts-selector\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label className={s.filter}>\n      <p className={s.title}>Find contacts by name </p>\n\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: getFilter(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(filterAction.changeFilter(e.currentTarget.value)),\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./BookItem.module.css\";\n\nconst PhoneListItem = ({ id, name, number, onDeleteList }) => {\n  return (\n    <li className={s.list} key={id}>\n      <p className={s.name}>{name}:</p>\n      <p className={s.number}>{number}</p>\n      <div className={s.buttonList}>\n      <button className={s.button} onClick={() => onDeleteList(id)}>\n        Delete\n      </button>\n      </div>\n    \n    </li>\n  );\n};\n\nPhoneListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n};\n\nexport default PhoneListItem;\n","import React from \"react\";\nimport { useEffect } from 'react';\n// import { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  contactsOperations  from '../../redux/contacts-operations';\nimport PhoneBookItem from \"../PhonebookItem/PhoneBookItem\";\nimport { getVisibleContacts, getLoading } from \"../../redux/contacts-selector\";\nimport s from \"./PhonebookList.module.css\"\n// import PropTypes from \"prop-types\";\n\nconst PhonebookList = ({ title }) => {\n  const contacts = useSelector(getVisibleContacts);\n  const loading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  const onDeleteList = id => dispatch(contactsOperations.deleteItem(id));\n\n  return (\n    <div>\n      <h2 className={s.title}>{title}</h2>\n      \n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <PhoneBookItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteList={() => onDeleteList(id)}\n          />\n        ))}\n      </ul>\n      {loading && <h1>Loading...</h1>}\n    </div>\n  );\n};\n\n  \nexport default PhonebookList;\n\n\n\n// const mapStateToProps = (state) => {\n//  const { filter, items } = state.contacts;\n//  const visibleContacts = getVisibleContacts(items, filter);\n\n//  return {\n//   contacts: visibleContacts,\n//  }\n// }\n  \n// const mapDispatchToProps = dispatch => ({\n//   onDeleteList: (id) => dispatch(deleteItem.deleteItem(id))\n// })\n\n// PhonebookList.propTypes = {\n//   contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   title: PropTypes.string.isRequired,\n//   onDeleteList: PropTypes.func.isRequired,\n// };\n\n  \n// export default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n","\r\nimport Container from \"../../components/Container/Container\";\r\nimport Input  from \"../../components/ContactForm/InputForm\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport PhonebookList from \"../../components/PhonebookList/PhonebookList\";\r\nimport s from \"./ContactsView.module.css\"\r\n\r\n\r\nfunction ContactsView() {\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <div className={s.Contacts}>\r\n            <h1>Phonebook</h1>\r\n         <Input />\r\n         <Filter />\r\n         <PhonebookList\r\n          title=\"Contacts\"/>\r\n            </div>\r\n         </Container>\r\n    )\r\n};\r\n\r\nexport default ContactsView;"],"sourceRoot":""}